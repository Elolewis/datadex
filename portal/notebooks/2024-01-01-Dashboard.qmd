---
title: "Dashboard"
date: 2023-01-01
execute:
  echo: false
image: https://www.freeiconspng.com/uploads/dashboard-icon-3.png
image-height: 100px
description: "Example Dashboard. This is a dashboard that uses DuckDB WASM to run queries from your browser."
format:
  dashboard
---

Example Dashboard. This is a dashboard that uses DuckDB WASM to run queries from your browser.


```{ojs}
//| output: false
energydb = DuckDBClient.of({
  energy: FileAttachment("https://raw.githubusercontent.com/datonic/spain-energy-demand/main/data/spain-energy-demand.csv")
})
```

## Example

```{ojs}
//| title: "Table"
Inputs.table(energydb.query("select * from energy order by datetime desc limit 10"))
```

```{ojs}
//| title: "Plotting 10 million flights"
//| output: asis
vg = {
  const vg = await import('https://cdn.jsdelivr.net/npm/@uwdata/vgplot/+esm');
  const wasm = await vg.wasmConnector();
  vg.coordinator().databaseConnector(wasm);
  return vg;
}

viewof flights = {
  // load flights data from external parquet file
  await vg.coordinator().exec(`CREATE TABLE IF NOT EXISTS flights10m AS
    SELECT
      GREATEST(-60, LEAST(ARR_DELAY, 180))::DOUBLE AS delay,
      DISTANCE AS distance,
      DEP_TIME AS time
    FROM 'https://uwdata.github.io/mosaic-datasets/data/flights-10m.parquet'`);

  // create a selection with crossfilter resolution
  const brush = vg.Selection.crossfilter();

  // helper method to generate a binned plot filtered by brush
  // a plot contains a rectY mark for a histogram, as well as
  // an intervalX interactor to populate the brush selection
  const makePlot = column => vg.plot(
    vg.rectY(
      vg.from("flights10m", { filterBy: brush }), // data set and filter selection
      { x: vg.bin(column), y: vg.count(), fill: "steelblue", inset: 0.5 }
    ),
    vg.intervalX({ as: brush }), // create an interval selection brush
    vg.xDomain(vg.Fixed), // don't change the x-axis domain across updates
    vg.marginLeft(75),
    vg.width(600),
    vg.height(200)
  );

  // generate dashboard with three linked histograms
  return vg.vconcat(
    makePlot("delay"),
    makePlot("time"),
    makePlot("distance")
  );
}
```

##
